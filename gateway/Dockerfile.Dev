FROM golang:1.22-alpine

WORKDIR /app

# Install Air and required build tools
RUN apk add --no-cache git gcc musl-dev netcat-openbsd && \
    go install github.com/cosmtrek/air@v1.44.0

# Copy all necessary module files first
COPY go.work go.work.sum ./
COPY common/go.mod common/go.sum ./common/
COPY auth/go.mod auth/go.sum ./auth/
COPY category/go.mod category/go.sum ./category/
COPY product/go.mod product/go.sum ./product/
COPY gateway/go.mod gateway/go.sum ./gateway/

# Copy source code
COPY common/ ./common/
COPY auth/ ./auth/
COPY category/ ./category/
COPY product/ ./product/
COPY gateway/ ./gateway/

# Set workdir to gateway
WORKDIR /app/gateway

# Download dependencies and tidy
RUN go mod download && \
    go mod tidy

# Create tmp directory for Air
RUN mkdir -p tmp && chmod 777 tmp

# Create .air.toml configuration
RUN echo '[build]\n\
  cmd = "go build -o ./tmp/main ."\n\
  bin = "./tmp/main"\n\
  include_ext = ["go", "tpl", "tmpl", "html"]\n\
  exclude_dir = ["assets", "tmp", "vendor"]\n\
  delay = 1000\n\
  kill_delay = "0.5s"\n\
  send_interrupt = false\n\
  stop_on_error = true\n\
\n\
[color]\n\
  build = "yellow"\n\
  main = "magenta"\n\
  runner = "green"\n\
  watcher = "cyan"\n\
\n\
[screen]\n\
  clear_on_rebuild = true' > .air.toml

# Start script to wait for services
COPY <<EOF /start.sh
#!/bin/sh
echo "Waiting for Auth service..."
until nc -z auth_service 50051; do
    sleep 2
done

echo "Waiting for Product service..."
until nc -z product_service 50052; do
    sleep 2
done

echo "Waiting for Category service..."
until nc -z category_service 50053; do
    sleep 2
done

echo "All services are ready!"
sleep 5  # Give extra time for services to fully initialize

cd /app/gateway
air
EOF

RUN chmod +x /start.sh

CMD ["/start.sh"]
