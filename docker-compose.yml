services:
  postgresql:
    image: postgres:17
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_MULTIPLE_DATABASES: auth,product,category
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-postgres-databases.sh:/docker-entrypoint-initdb.d/init-multiple-postgres-databases.sh
    networks:
      - app_network
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "statement_timeout=60000"
      - "-c"
      - "idle_in_transaction_session_timeout=60000"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - app_network

  auth_service:
    build:
      context: ./auth
      dockerfile: Dockerfile.Dev
    volumes:
      - ./auth:/app/auth
      - go_modules:/go/pkg/mod
      - ./common:/app/common
    environment:
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=auth
    ports:
      - "50051:50051"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50051"]
      interval: 10s
      timeout: 5s
      retries: 5

  product_service:
    build:
      context: .
      dockerfile: ./product/Dockerfile.Dev
    volumes:
      - ./product:/app/product
      - ./common:/app/common
      - go_modules:/go/pkg/mod
    environment:
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=product
      - PGCONNECT_TIMEOUT=15
    ports:
      - "50052:50052"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50052"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  category_service:
    build:
      context: .
      dockerfile: ./category/Dockerfile.Dev
    volumes:
      - ./category:/app/category
      - go_modules:/go/pkg/mod
      - ./common:/app/common
    environment:
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=category
    ports:
      - "50053:50053"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50053"]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile.Dev
    volumes:
      - ./gateway:/app/gateway
      - ./auth:/app/auth
      - ./category:/app/category
      - ./product:/app/product
      - ./common:/app/common
      - go_modules:/go/pkg/mod
    environment:
      - AUTH_SERVICE_HOST=auth_service:50051
      - PRODUCT_SERVICE_HOST=product_service:50052
      - CATEGORY_SERVICE_HOST=category_service:50053
    ports:
      - "4000:4000"
    depends_on:
      auth_service:
        condition: service_healthy
      product_service:
        condition: service_healthy
      category_service:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  go_modules:
